#include <stdio.h>
#include <stdlib.h>
struct Node 
{
    int data;
    struct Node* next;
};
void insertAtBeginning(struct Node** head, int data) 
{
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = *head;
    *head = newNode;
}
void insertAtEnd(struct Node** head, int data) 
{
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    if (*head == NULL) 
	{
        *head = newNode;
        return;
    }
    struct Node* current = *head;
    while (current->next != NULL) 
	{
        current = current->next;
    }
    current->next = newNode;
}
void deleteNode(struct Node** head, int data) 
{
    if (*head == NULL)
        return;
    if ((*head)->data == data) 
	{
        struct Node* temp = *head;
        *head = (*head)->next;
        free(temp);
        return;
    }
    struct Node* current = *head;
    while (current->next != NULL && current->next->data != data) 
	{
        current = current->next;
    }
    if (current->next == NULL)
        return;
    struct Node* temp = current->next;
    current->next = current->next->next;
    free(temp);
}
void printList(struct Node* head) 
{
    struct Node* current = head;
    while (current != NULL) 
	{
        printf("%d -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}
int main() 
{
    struct Node* head = NULL;
    insertAtEnd(&head, 5);
    insertAtBeginning(&head, 3);
    insertAtBeginning(&head, 1);
    insertAtEnd(&head, 7);
    printf("Linked List: ");
    printList(head);
    deleteNode(&head, 3);
    printf("Linked List after deleting 3: ");
    printList(head);
    while (head != NULL) 
	{
        struct Node* temp = head;
        head = head->next;
        free(temp);
    }
    return 0;
}
